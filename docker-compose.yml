version: '3.8'
services:
  authentication-database:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5000:5432'
    volumes:
      - authentication-database:/var/lib/postgresql/data

  authentication-service:
    container_name: authentication-service
    build:
      context: Backend/Services/authentication
      dockerfile: ./Dockerfile
    image: authentication
    depends_on:
      - authentication-database
    ports:
      - 3001:8080
    environment:
      DB_HOST: authentication-database
      DB_PORT: 5000
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    links:
      - authentication-database
    volumes:
      - './:/src'  

  users-database:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5001:5432'
    volumes:
      - users-database:/var/lib/postgresql/data

  users-service:
    container_name: users-service
    build:
      context: Backend/Services/users
      dockerfile: ./Dockerfile
    image: users
    depends_on:
      - users-database
    ports:
      - 3002:8001
    environment:
      DB_HOST: users-database
      DB_PORT: 5001
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
    links:
      - users-database
    volumes:
      - './:/src'  

  frontend:
    container_name: frontend
    build:
      context: Frontend/web-react
      dockerfile: ./Dockerfile.dev
    ports:
      - 3000:8080

  nginx-proxy:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  authentication-database:
  users-database: